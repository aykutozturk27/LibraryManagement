// <auto-generated />
using System;
using LibraryManagement.DataAccess.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagement.DataAccess.Migrations
{
    [DbContext(typeof(LibraryManagementContext))]
    [Migration("20231021101248_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagement.Entities.Concrete.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Author");

                    b.Property<string>("BookName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Name");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedOn");

                    b.Property<string>("ISBN")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ISBN");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsBorrowed")
                        .HasColumnType("bit")
                        .HasColumnName("IsBorrowed");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReceivingDate");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReturnDate");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("PersonalId");

                    b.ToTable("Book", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Victor Hugo",
                            BookName = "Sefiller",
                            CreatedOn = new DateTime(2023, 10, 21, 13, 12, 48, 761, DateTimeKind.Local).AddTicks(6630),
                            ISBN = "13345678912",
                            IsActive = true,
                            IsBorrowed = false,
                            PersonalId = 1,
                            ReceivingDate = new DateTime(2023, 10, 11, 13, 12, 48, 761, DateTimeKind.Local).AddTicks(6636),
                            ReturnDate = new DateTime(2023, 10, 22, 13, 12, 48, 761, DateTimeKind.Local).AddTicks(6641),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Author = "Jose Mauro De Vasconcelos",
                            BookName = "Şeker Portakalı",
                            CreatedOn = new DateTime(2023, 10, 21, 13, 12, 48, 761, DateTimeKind.Local).AddTicks(6643),
                            ISBN = "13345678912",
                            IsActive = true,
                            IsBorrowed = false,
                            PersonalId = 2,
                            ReceivingDate = new DateTime(2023, 10, 11, 13, 12, 48, 761, DateTimeKind.Local).AddTicks(6643),
                            ReturnDate = new DateTime(2023, 10, 22, 13, 12, 48, 761, DateTimeKind.Local).AddTicks(6644),
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LibraryManagement.Entities.Concrete.Personal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedOn");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FirstName");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("IdentityNumber");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Personal", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2023, 10, 21, 13, 12, 48, 761, DateTimeKind.Local).AddTicks(3919),
                            FirstName = "Aykut",
                            IdentityNumber = "12345678901",
                            IsActive = true,
                            LastName = "Öztürk",
                            PhoneNumber = "12345678901",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2023, 10, 21, 13, 12, 48, 761, DateTimeKind.Local).AddTicks(3937),
                            FirstName = "Kamil",
                            IdentityNumber = "15789631485",
                            IsActive = true,
                            LastName = "Ahmet",
                            PhoneNumber = "15789631485",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LibraryManagement.Entities.Concrete.Book", b =>
                {
                    b.HasOne("LibraryManagement.Entities.Concrete.Personal", "Personal")
                        .WithMany("Books")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("LibraryManagement.Entities.Concrete.Personal", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
